{"ast":null,"code":"import { Axios } from './Axios';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nconst handleGetAllPokemons = () => {\n  return new Promise((resolve, reject) => {\n    axios.get(\"http://pokeapi.co/api/v2/pokemon/?limit=151\").then(pokemon => {\n      resolve(pokemon);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\nconst handleGetEachPokemon = pokemon => {\n  axios.get(\"\".concat(pokemon)).then(pokemon => {\n    console.log(pokemon);\n  }).then(error => {\n    error;\n  });\n};\n\nconst apiAuth = ({\n  email,\n  password\n}) => {\n  return new Promise((resolve, reject) => {\n    Axios.post('/users/sign-up-and-sign-in', {\n      email,\n      password\n    }).then(results => {\n      let token = results.data.token;\n      const decodedToken = jwt_decode(token);\n      resolve(decodedToken);\n      resolve(results);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\nconst checkToken = () => {\n  return new Promise((resolve, reject) => {\n    Axios.get('/users/auth').then(token => {\n      resolve(token.data);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\nconst logOut = () => {\n  Axios.get('/users/logout');\n};\n\nexport { handleGetAllPokemons, apiAuth, checkToken, logOut };","map":{"version":3,"sources":["/Users/ginnygutang/Desktop/tests/debugging/pokemon-react/src/api/api.js"],"names":["Axios","axios","jwt_decode","handleGetAllPokemons","Promise","resolve","reject","get","then","pokemon","catch","error","handleGetEachPokemon","console","log","apiAuth","email","password","post","results","token","data","decodedToken","checkToken","logOut"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,oBAAoB,GAAE,MAAI;AAC5B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClCL,IAAAA,KAAK,CAACM,GAAN,gDACKC,IADL,CACUC,OAAO,IAAG;AACZJ,MAAAA,OAAO,CAACI,OAAD,CAAP;AACH,KAHL,EAIKC,KAJL,CAIWC,KAAK,IAAE;AACVL,MAAAA,MAAM,CAACK,KAAD,CAAN;AACH,KANL;AAOH,GARM,CAAP;AASH,CAVD;;AAYA,MAAMC,oBAAoB,GAAIH,OAAD,IAAY;AACjCR,EAAAA,KAAK,CAACM,GAAN,WAAaE,OAAb,GACKD,IADL,CACUC,OAAO,IAAE;AACXI,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACH,GAHL,EAIKD,IAJL,CAIUG,KAAK,IAAE;AACTA,IAAAA,KAAK;AACR,GANL;AAOP,CARD;;AAUA,MAAMI,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AAClC,SAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClCN,IAAAA,KAAK,CAACkB,IAAN,CAAW,4BAAX,EAAyC;AACrCF,MAAAA,KADqC;AAErCC,MAAAA;AAFqC,KAAzC,EAICT,IAJD,CAIMW,OAAO,IAAI;AAAA,UACPC,KADO,GACED,OAAO,CAACE,IADV,CACPD,KADO;AAEb,YAAME,YAAY,GAAGpB,UAAU,CAACkB,KAAD,CAA/B;AACAf,MAAAA,OAAO,CAACiB,YAAD,CAAP;AACAjB,MAAAA,OAAO,CAACc,OAAD,CAAP;AACH,KATD,EAUCT,KAVD,CAUOC,KAAK,IAAG;AACXL,MAAAA,MAAM,CAACK,KAAD,CAAN;AACH,KAZD;AAaH,GAdM,CAAP;AAeH,CAhBD;;AAiBA,MAAMY,UAAU,GAAG,MAAK;AACpB,SAAO,IAAInB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClCN,IAAAA,KAAK,CAACO,GAAN,CAAU,aAAV,EACKC,IADL,CACUY,KAAK,IAAG;AACVf,MAAAA,OAAO,CAACe,KAAK,CAACC,IAAP,CAAP;AACH,KAHL,EAIKX,KAJL,CAIWC,KAAK,IAAG;AACXL,MAAAA,MAAM,CAACK,KAAD,CAAN;AACH,KANL;AAQH,GATM,CAAP;AAUH,CAXD;;AAYA,MAAMa,MAAM,GAAG,MAAK;AAChBxB,EAAAA,KAAK,CAACO,GAAN,CAAU,eAAV;AACH,CAFD;;AAIA,SACIJ,oBADJ,EAEIY,OAFJ,EAGIQ,UAHJ,EAIIC,MAJJ","sourcesContent":["import { Axios } from './Axios';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nconst handleGetAllPokemons =()=>{\n    return new Promise((resolve, reject)=>{\n        axios.get(`http://pokeapi.co/api/v2/pokemon/?limit=151`)\n            .then(pokemon =>{\n                resolve(pokemon)\n            })\n            .catch(error=>{\n                reject(error)\n            })\n    })\n}\n\nconst handleGetEachPokemon = (pokemon) =>{\n        axios.get(`${pokemon}`)\n            .then(pokemon=>{\n                console.log(pokemon)\n            })\n            .then(error=>{\n                error\n            })\n}\n\nconst apiAuth = ({email, password}) =>{\n    return new Promise((resolve, reject)=>{\n        Axios.post('/users/sign-up-and-sign-in', {\n            email,\n            password\n        })\n        .then(results => {\n            let { token }= results.data\n            const decodedToken = jwt_decode(token)\n            resolve(decodedToken)\n            resolve(results)\n        })\n        .catch(error =>{\n            reject(error)\n        })\n    })\n}\nconst checkToken = () =>{\n    return new Promise((resolve, reject)=>{\n        Axios.get('/users/auth')\n            .then(token =>{\n                resolve(token.data)\n            })\n            .catch(error =>{\n                reject(error)\n            })\n\n    })\n}\nconst logOut = () =>{\n    Axios.get('/users/logout')\n}\n\nexport {\n    handleGetAllPokemons,\n    apiAuth,\n    checkToken,\n    logOut\n}"]},"metadata":{},"sourceType":"module"}