{"ast":null,"code":"import { Axios } from './Axios';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nconst handleGetAllPokemons = () => {\n  return new Promise((resolve, reject) => {\n    axios.get(\"http://pokeapi.co/api/v2/pokemon/?limit=151\").then(pokemon => {\n      resolve(pokemon);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\nconst handleGetEachPokemon = pokemon => {\n  return new Promise((resolve, reject) => {\n    axios.get(\"http://pokeapi.co/api/v2/pokemon/\".concat(pokemon)).then(pokemon => {\n      resolve(pokemon);\n    }).then(error => {\n      reject(error);\n    });\n  });\n};\n\nconst apiAuth = ({\n  email,\n  password\n}) => {\n  return new Promise((resolve, reject) => {\n    Axios.post('/users/sign-up-and-sign-in', {\n      email,\n      password\n    }).then(results => {\n      let token = results.data.token;\n      localStorage.setItem('jwtToken', token);\n      const decodedToken = jwt_decode(token);\n      resolve(decodedToken);\n      resolve(results);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\nconst checkToken = () => {\n  return new Promise((resolve, reject) => {\n    let token = localStorage.getItem('jwtToken');\n\n    if (token) {\n      let decodedToken = jwt_decode(token);\n      let currentDate = Date.now() / 1000;\n\n      if (decodedToken.exp < currentDate) {\n        localStorage.removeItem('jwtToken');\n        reject(null);\n      } else {\n        let user = {\n          id: decodedToken.id,\n          email: decodedToken.email\n        };\n        resolve(user);\n      }\n    } else {\n      reject('Log in to use this');\n    }\n  });\n};\n\nconst addPokemon = (email, name, img) => {\n  return new Promise((resolve, reject) => {\n    Axios.post('/teams/add-new-member', {\n      email,\n      name,\n      img\n    }).then(result => {\n      resolve(result);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\nconst showMyTeam = email => {\n  return new Promise((resolve, reject) => {\n    Axios.get(\"/teams/my-team/\".concat(email)).then(result => {\n      resolve(result);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\nexport { handleGetAllPokemons, apiAuth, checkToken, handleGetEachPokemon, addPokemon, showMyTeam };","map":{"version":3,"sources":["/Users/ginnygutang/Desktop/broken/pokemon-react/src/api/api.js"],"names":["Axios","axios","jwt_decode","handleGetAllPokemons","Promise","resolve","reject","get","then","pokemon","catch","error","handleGetEachPokemon","apiAuth","email","password","post","results","token","data","localStorage","setItem","decodedToken","checkToken","getItem","currentDate","Date","now","exp","removeItem","user","id","addPokemon","name","img","result","showMyTeam"],"mappings":"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","sourcesContent":["import { Axios } from './Axios';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nconst handleGetAllPokemons =()=>{\n    return new Promise((resolve, reject)=>{\n        axios.get(`http://pokeapi.co/api/v2/pokemon/?limit=151`)\n            .then(pokemon =>{\n                resolve(pokemon)\n            })\n            .catch(error=>{\n                reject(error)\n            })\n    })\n}\n\nconst handleGetEachPokemon = (pokemon) =>{\n        return new Promise((resolve,reject)=>{\n            axios.get(`http://pokeapi.co/api/v2/pokemon/${pokemon}`)\n            .then(pokemon=>{\n                resolve(pokemon)\n            })\n            .then(error=>{\n                reject(error)\n            })\n        })\n}\n\nconst apiAuth = ({email, password}) =>{\n    return new Promise((resolve, reject)=>{\n        Axios.post('/users/sign-up-and-sign-in', {\n            email,\n            password\n        })\n        .then(results => {\n            let { token }= results.data\n            localStorage.setItem('jwtToken', token)\n            const decodedToken = jwt_decode(token)\n            resolve(decodedToken)\n            resolve(results)\n        })\n        .catch(error =>{\n            reject(error)\n        })\n    })\n}\nconst checkToken = () =>{\n    return new Promise((resolve, reject) => {\n        let token = localStorage.getItem('jwtToken');\n        if (token) {\n        \n            let decodedToken = jwt_decode(token);\n            let currentDate = Date.now() / 1000;\n        \n            if(decodedToken.exp < currentDate) {\n\n                localStorage.removeItem('jwtToken')\n                reject(null)\n\n            } else {\n\n                let user = {\n                    id: decodedToken.id,\n                    email: decodedToken.email\n                }\n                resolve(user)\n            }\n        } else {\n            reject('Log in to use this')\n        }\n    })\n}\n\nconst addPokemon = (email, name, img) =>{\n    return new Promise((resolve, reject)=>{\n        Axios.post('/teams/add-new-member', { email, name, img })\n            .then(result =>{\n                resolve(result)\n            })\n            .catch(error =>{\n                reject(error)\n            })\n    })\n}\nconst showMyTeam = (email) =>{\n    return new Promise((resolve, reject)=>{\n        Axios.get(`/teams/my-team/${email}`)\n            .then(result =>{\n                resolve(result)\n            })\n            .catch(error=>{\n                reject(error)\n            })\n    })\n}\n\nexport {\n    handleGetAllPokemons,\n    apiAuth,\n    checkToken,\n    handleGetEachPokemon,\n    addPokemon,\n    showMyTeam\n}"]},"metadata":{},"sourceType":"module"}